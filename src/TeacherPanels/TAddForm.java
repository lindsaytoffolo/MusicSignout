package TeacherPanels;

import static StudentPanels.Database.connectDB;
import java.awt.CardLayout;
import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 072584980
 */
public class TAddForm extends javax.swing.JPanel {

    JPanel home;
    String type="",obj="";
    int t_id=0, o_id=0,i_id=0;
    String barcode="0";
    Random rdm = new Random();
    Connection c;

    /**
     * Creates new form TMenu
     */
    public TAddForm() {
        initComponents();
    }

    public TAddForm(JPanel p) {
        initComponents();
        home = p;
        //hides added new item message
        lblCongrats.setText("");
        lblName.setText("");
        lblBarcode.setText("");
        String typ;
        String object;
        c = StudentPanels.Database.connectDB();
        if (c == null) 
            System.exit(-1); 
        Statement stmt; 
        ResultSet rs; 
        //these try catch statements allow the types and objects to appear
        try { 
            stmt = c.createStatement();
            rs = stmt.executeQuery("SELECT * FROM type"); 
            while (rs.next()) { 
                typ = rs.getString("name");
                cbType.addItem(typ);
                //System.out.println(rs.getObject(1));
        }} catch (SQLException e) {
            System.out.println(e.getMessage()+"\nrip");
        }
        try { 
            stmt = c.createStatement();
            rs = stmt.executeQuery("SELECT * FROM object"); 
            while (rs.next()) { 
                object = rs.getString("name");
                cbObject.addItem(object);
                //System.out.println(rs.getObject(1));
        }} catch (SQLException e) {
            System.out.println(e.getMessage()+"\nrip");
        }
    }
    
    public String genBarcode(){
        Statement stmt;
        ResultSet rs;
        String bc = "";
        boolean exist;
        do{
            //randomly generate barcode
            for(int i=0; i<10; i++){
                int num = rdm.nextInt(10);
                bc = bc+num;
            }
            exist = false;
            //check if bc exists
            try {
            stmt = c.createStatement();
            rs = stmt.executeQuery("SELECT * FROM item"); 
            // Now do something with the ResultSet .... 
            while (rs.next()==true) { 
                String bar = rs.getString("barcode");
                if(bar.equals(bc)){
                    exist=true;
                }
                System.out.println("Gen bc: "+bc);
                System.out.println("Bc in table"+bar);
                System.out.println("exist: "+exist);
            }
            rs.close();
            } catch (SQLException e) {
                System.out.println(e.getMessage()+"\nrip");
            }
            }while (exist==true);
        return bc;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblObject = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox();
        cbObject = new javax.swing.JComboBox();
        tfNewType = new javax.swing.JTextField();
        tfNewObject = new javax.swing.JTextField();
        lblCongrats = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblBarcode = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1000, 750));

        lblHeader.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblHeader.setText("Please fill in the following information");

        lblType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblType.setText("Type");

        lblObject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblObject.setText("Object");

        cbType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Create new type" }));
        cbType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbTypeMouseClicked(evt);
            }
        });
        cbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeActionPerformed(evt);
            }
        });

        cbObject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbObject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Create new object" }));

        tfNewType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfNewType.setText("Name of type");

        tfNewObject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfNewObject.setText("Name of object");

        lblCongrats.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCongrats.setText("Congratulations! You added a new item!");

        lblName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblName.setText("Name:");

        lblBarcode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBarcode.setText("Barcode #:");

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAdd.setText("Add item");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(lblHeader))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBarcode)
                            .addComponent(lblName)
                            .addComponent(lblCongrats))))
                .addContainerGap(195, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 320, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblType, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblObject, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbObject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfNewType, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfNewObject, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(437, 437, 437))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(112, 112, 112))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblType))
                .addGap(26, 26, 26)
                .addComponent(tfNewType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblObject))
                .addGap(29, 29, 29)
                .addComponent(tfNewObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnAdd)
                .addGap(20, 20, 20)
                .addComponent(lblCongrats)
                .addGap(43, 43, 43)
                .addComponent(lblName)
                .addGap(35, 35, 35)
                .addComponent(lblBarcode)
                .addGap(25, 80, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardLayout cl = (CardLayout) home.getLayout();
        cl.show(home, "menu");
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeActionPerformed
        
    }//GEN-LAST:event_cbTypeActionPerformed

    private void cbTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbTypeMouseClicked
        
    }//GEN-LAST:event_cbTypeMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //add type and object to DB
        c = StudentPanels.Database.connectDB();
        if (c == null) 
            System.exit(-1);
        Statement stmt; 
        ResultSet rs; 
        //adds new type and type ID to DB
        if(cbType.getSelectedIndex()==0){
            try { 
                type = tfNewType.getText();
                String q = "insert into type(t_id,name) values(DEFAULT,?)";
                PreparedStatement pstmt = c.prepareStatement(q); {
                pstmt.setString(1,type);
                pstmt.executeUpdate();
                System.out.println("Boop");
            }} catch (SQLException e) {
                System.out.println(e.getMessage()+"\nrip");
            }
        }
        else{
            type = (String)cbType.getSelectedItem();
        }
        //when new object is entered
        if(cbObject.getSelectedIndex()==0){
            try { 
                t_id = 0;
                obj = tfNewObject.getText();
                stmt = c.createStatement();
                rs = stmt.executeQuery("SELECT * FROM type"); 
                //determines ID of the selected type
                while(rs.next() && t_id==0){
                    String tableType = rs.getString("name");
                    if(tableType.equals(type)){
                        t_id = rs.getInt("t_id");
                    }
                }
                //don't ask bc idk
                t_id = t_id-2;
                rs.close();
                //adds new object, object ID, and type ID to DB
                String q = "insert into object(o_id,t_id,name) values(DEFAULT,?,?)";
                PreparedStatement pstmt = c.prepareStatement(q); {
                    pstmt.setInt(1,t_id);
                    pstmt.setString(2,obj);
                    pstmt.executeUpdate();
                    System.out.println("Boop");
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage()+"\nrip1");
            }
        }
        else{
            try { 
                t_id = 0;
                obj = (String)cbObject.getSelectedItem();
                stmt = c.createStatement();
                rs = stmt.executeQuery("SELECT * FROM type"); 
                //determines ID of the selected type
                while(rs.next() && t_id==0){
                    String tableType = rs.getString("name");
                    if(tableType.equals(type)){
                        t_id = rs.getInt("t_id");
                    }
                }
                t_id = t_id-2;
                rs.close();
                String q = "insert into object(o_id,t_id,name) values(DEFAULT,?,?)";
                PreparedStatement pstmt = c.prepareStatement(q); {
                    pstmt.setInt(1,t_id);
                    pstmt.setString(2,obj);
                    pstmt.executeUpdate();
                    System.out.println("Boop");
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage()+"\nrip2");
            }
        }
        //add item to db and write it to screen
        try {  
                stmt = c.createStatement();
                rs = stmt.executeQuery("SELECT * FROM object"); 
                while(rs.next()){
                    if(rs.getString("name").equals(obj))
                        o_id = rs.getInt("o_id");
                }
                rs.close();
                rs = stmt.executeQuery("SELECT * FROM item"); 
                //gets last item ID in database
                while(rs.next()){
                    i_id = rs.getInt("i_id");
                }
                rs.close();
                //gets next ID number to assign to new item
                i_id = i_id+1;
                System.out.println("i_id of new item: "+i_id);
                barcode = genBarcode();
                String q = "insert into item(barcode,i_id,o_id,t_id,name,active) values(?,?,?,?,?,?)";
                PreparedStatement pstmt = c.prepareStatement(q); {
                    pstmt.setString(1, barcode);
                    pstmt.setInt(2, i_id);
                    pstmt.setInt(3,o_id);
                    pstmt.setInt(4,t_id);
                    pstmt.setString(5, obj+" "+i_id);
                    pstmt.setBoolean(6, true);
                    pstmt.executeUpdate();
                    System.out.println("Boop");
                }
                rs.close();
            } catch (SQLException e) {
                System.out.println(e.getMessage()+"\nrip");
            }
        //added new item message appears
        System.out.println("Congratulations! You added a new item!");
        System.out.println("Name: "+obj+" "+i_id);
        System.out.println("Barcode #: "+barcode);
        /*lblCongrats.setText("Congratulations! You added a new item!");
        lblName.setText("Name: "+obj+" "+i_id);
        lblBarcode.setText("Barcode #: "+barcode);*/
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cbObject;
    private javax.swing.JComboBox cbType;
    private javax.swing.JLabel lblBarcode;
    private javax.swing.JLabel lblCongrats;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblObject;
    private javax.swing.JLabel lblType;
    private javax.swing.JTextField tfNewObject;
    private javax.swing.JTextField tfNewType;
    // End of variables declaration//GEN-END:variables
}
